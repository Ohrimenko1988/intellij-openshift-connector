#!/usr/bin/env groovy

timeout(time: 90, unit: 'MINUTES') {
  node('rhel8-24gb'){
    stage('Checkout repo') {
      deleteDir()
      dir('intellij-openshift-connector') {
        // git url: "https://github.com/${FORK}/intellij-openshift-connector.git",
        //   branch: "${BRANCH}"
          git url: "https://github.com/Ohrimenko1988/intellij-openshift-connector.git",
          branch: "iokhrime-pr-check"
      }
    }
    
    stage ('Set up cluster') {
            // Downloads, start and configures local cluster using CRC
            stage('CRC Cluster preparation') {
                stage('Download and Setup CRC') {
                    timeout(time: 15, unit: 'MINUTES') {
                        withCredentials([string(credentialsId: 'crc-pull-secret', variable: 'PULL_SECRET')]){
                            writeFile(file: "${env.WORKSPACE}/crc-pull-secret.txt", text: "${env.PULL_SECRET}", encoding: "UTF-8")
                            env.CRC_PULL_SECRET = "${env.WORKSPACE}/crc-pull-secret.txt"
                            sh '${WORKSPACE}/intellij-openshift-connector/tests/setup-scripts/setup-crc.sh'
                        }
                    }
                }

                stage('Run CRC') {
                    timeout(time: 45, unit: 'MINUTES') {
                        sh '${WORKSPACE}/intellij-openshift-connector/tests/setup-scripts/run-crc.sh'
                    }
                }
            }
        }
    }

    stage('Install requirements') {
      // def nodeHome = tool 'nodejs-12.13.1'
      // env.PATH="${env.PATH}:${nodeHome}/bin"
      // sh "npm install -g typescript vsce"


      // install necessary tools
    }

    stage('Build') {
      // dir('vscode-knative') {
      //   sh "npm install"
      //   sh "npm run build"
      // }


      // build repo
    }

    stage('Test') {
      // wrap([$class: 'Xvnc']) {
      //   dir('vscode-knative') {
      //     sh "npm test"
      //   }
      // }


      // run tests
    }

    // stage('UI Tests') {
    //   wrap([$class: 'Xvnc']) {
    //     dir('vscode-knative') {
    //       sh """
    //       if [ -f \$HOME/.vs-kn/kn ]; then
    //         rm \$HOME/.vs-kn/kn
    //       fi
    //       """
    //       try {
    //         sh "npm run ui-test"
    //       }
    //       finally {
    //         archiveArtifacts artifacts: '**/test-resources/*.log,**/test-resources/**/*.png'
    //       }
    //     }
    //   }
    // }
  // }
}
